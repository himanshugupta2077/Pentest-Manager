{
    "Test case title": "SQL Injection",
    "Background Information": "SQL Injection is a code injection technique used to attack data-driven applications. It occurs when malicious SQL statements are inserted into application queries to manipulate the database. This vulnerability arises when user input is incorrectly filtered or sanitized before being included in SQL queries. Successful SQL injection attacks can read sensitive data, modify database data, execute administration operations on the database, issue commands to the operating system, and in some cases, take full control of the system.",
    "Impact": {
        "Overall": "SQL Injection can lead to unauthorized access to sensitive data, data manipulation, and even full system compromise. The severity depends on the attacker's skill and the database permissions.",
        "Confidentiality": "Attackers can retrieve sensitive information from the database, including user credentials, personal data, and business secrets.",
        "Integrity": "Malicious users can insert, modify, or delete data in the database, compromising its integrity and potentially causing significant business impact.",
        "Availability": "In extreme cases, attackers might be able to delete entire tables or databases, severely affecting the availability of the application and its data.",
        "Sample": "An attacker could bypass authentication by injecting a always-true condition into the login query, gaining unauthorized access to the application."
    },
    "Remediation": [
        "Use parameterized queries or prepared statements instead of dynamic SQL construction.",
        "Implement proper input validation and sanitization for all user-supplied input used in database queries.",
        "Apply the principle of least privilege to database accounts used by the application.",
        "Use stored procedures with strongly typed parameters.",
        "Regularly update and patch the database management system and related components."
    ],
    "Reference": {
        "OWASP SQL Injection Prevention Cheat Sheet": "https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html",
        "PortSwigger Web Security Academy: SQL injection": "https://portswigger.net/web-security/sql-injection"
    }
}